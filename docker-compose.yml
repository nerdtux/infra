version: "3"

services:
  webapp:
    restart: always
    build:
      context: .
    ports:
      - 8000:8000
    volumes:
      - "./src:/src"
    env_file:
      - .django.env
    command: python3 manage.py runserver 0.0.0.0:8000 # gunicorn ropd.wsgi:application -w 2 -b :8000
    links:
      - redis

  webproxy:
    restart: always
    build: ./webproxy/nginx/
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./src/static:/www/static"
      - "./src/media:/www/media"

      - "/etc/letsencrypt:/etc/letsencrypt"
      - "/var/lib/letsencrypt:/var/lib/letsencrypt"
    links:
      - redis
      - webapp:webapp
    environment:
      - PORT_REDIS=6379
      - HOST_REDIS=redis

  ### PostgreSQL Container (Master) ####################################

  master:
    restart: always
    build: ./pg_db/pg_master
    volumes:
      - master_vol:/var/lib/postgresql
    ports:
      - "5434:5432"
    env_file:
      - ./pg_db/pg_master/.master.env

  ### PostgreSQL Container (Slave) ####################################

  slave:
    restart: always
    build: ./pg_db/pg_slave
    volumes:
      - slave_vol:/var/lib/postgresql
    ports:
      - "5435:5432"
    links:
      - master:master
    env_file:
      - ./pg_db/pg_slave/.slave.env

  ### pgAdmin Container (Master) #######################################

  pgadmin:
    build: ./pg_db/pgadmin
    ports:
      - "5051:5051"
    env_file:
      - ./pg_db/pgadmin/pg4.env
    links:
      - master

  ### REDIS Container ##################################################
  redis:
      restart: always
      image: redis:3.2.0
      expose:
        - "6379"
      volumes:
        - redis_vol:/data

volumes:
  master_vol:
    driver: "local"
  slave_vol:
    driver: "local"
  sessions: ## nothing is connected to this (- ./data/sessions:/sessions)
    driver: "local"
  redis_vol:
    driver: "local"
